{"version":3,"file":"static/js/332.716f87de.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/ListRen/ListRen.module.css?8a8a","components/ListRen/ListRen.jsx","services/ApiService.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://goit-react-hw-05-movies/./src/views/MoviesPage.module.css?7fa2","views/MoviesPage.jsx","services/localStorage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListRen_list__K1tfQ\",\"item\":\"ListRen_item__H8QV5\",\"link\":\"ListRen_link__ncij6\"};","import { Link } from \"react-router-dom\";\nimport s from \"./ListRen.module.css\";\nimport { useLocation } from 'react-router-dom';\n\nconst ListRen = ({ movies }) => {\n  // const {url} = useRouteMatch()\n  const location = useLocation();\n  return (\n    <>\n      {movies && (\n        <ul className={s.list}>\n          {movies.map((movie) => (\n            <li key={movie.id} className={s.item}>\n              <Link to={{\n                pathname: `/movies/${movie.id}`,\n                state: {\n                  from: location,\n                },\n              }} className={s.link}>\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default ListRen;","const API_KEY = \"a7fbd97c4bcadca0b85e6cd0f372e193\";\n\nexport async function fetchWithError() {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport async function getMoviesSearch(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language-en-US&page=1&query=${query}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}\n\nexport async function fetchCastId(movieId) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}\n\nexport async function fetchReview(movieId) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"SearchInput\":\"MoviesPage_SearchInput__R7sqV\"};","import { useState, useEffect } from \"react\";\n// import { useHistory } from \"react-router\";\nimport ListRen from \"../components/ListRen/ListRen\";\nimport { getMoviesSearch } from \"../services/ApiService\";\nimport s from \"./MoviesPage.module.css\";\nimport * as storage from \"../services/localStorage\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\n\nconst STORAGE_KEY = \"movies\";\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [queryS, setQueryS] = useState(\"\");\n  const [searchName, setSearchName] = useState(storage.get(STORAGE_KEY) ?? \"\");\n  // const [error, setError] = useState(\"\");\n  // const history = useHistory();\n  useEffect(() => {\n    storage.save(STORAGE_KEY, searchName);\n  }, [searchName]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchName(queryS);\n    // toast.error(\"Movie not found\");\n    // reset();\n  };\n\n  // const reset = () => {\n  //   setQueryS(\"\");\n  // };\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const movies = await getMoviesSearch(searchName);\n        setMovies([...movies.results]);\n      } catch (e) {\n        toast(\"Here you can find movies\");\n      } finally {\n        <Loader />;\n      }\n    };\n    getMovie();\n  }, [searchName]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={queryS}\n          className={s.SearchInput}\n          onChange={(e) => setQueryS(e.target.value)}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search all movies\"\n        />\n        <button className=\"Button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <ListRen movies={movies} />\n    </>\n  );\n}","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };"],"names":["movies","location","useLocation","className","s","map","movie","to","pathname","id","state","from","title","name","API_KEY","fetchWithError","fetch","response","ok","json","Promise","reject","Error","getMoviesSearch","query","fetchMovieId","movieId","fetchCastId","fetchReview","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","STORAGE_KEY","MoviesPage","useState","setMovies","queryS","setQueryS","key","JSON","parse","localStorage","getItem","error","storage","searchName","setSearchName","useEffect","value","setItem","stringify","getMovie","results","toast","onSubmit","e","preventDefault","type","onChange","target","autoComplete","autoFocus","placeholder","ListRen"],"sourceRoot":""}