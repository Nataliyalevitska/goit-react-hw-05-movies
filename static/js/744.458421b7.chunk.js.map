{"version":3,"file":"static/js/744.458421b7.chunk.js","mappings":"qLACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAiF,sB,SCoBjF,EAlBgB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAEjB,OACE,8BACGA,IACC,eAAIC,UAAWC,EAAf,SACGF,EAAOG,KAAI,SAACC,GAAD,OACV,eAAmBH,UAAWC,EAA9B,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAML,UAAWC,EAA5C,SACGE,EAAMG,OAASH,EAAMI,QAFjBJ,EAAME,a,uLCVrBG,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,MAAM,0DAAD,OACgCF,IAFvD,YACCG,EADD,QAIWC,GAJX,gCAKKD,EAASE,OALd,+CAMDC,QAAQC,OAAO,IAAIC,MAAM,cANxB,0GASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBR,MAAM,qDAAD,OAC2BF,EAD3B,wCACkEU,IAFzF,WACCP,EADD,QAISC,GAJT,sBAImB,IAAII,MAAM,aAJ7B,uBAKQL,EAASE,OALjB,0GAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBV,MAAM,sCAAD,OACYU,EADZ,oBAC+BZ,IAFtD,WACCG,EADD,QAISC,GAJT,sBAImB,IAAII,MAAM,aAJ7B,uBAKQL,EAASE,OALjB,0GAQA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,uFACkBV,MAAM,sCAAD,OACYU,EADZ,4BACuCZ,IAF9D,WACCG,EADD,QAISC,GAJT,sBAImB,IAAII,MAAM,aAJ7B,uBAKQL,EAASE,OALjB,0GAQA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA2BF,GAA3B,uFACkBV,MAAM,sCAAD,OACYU,EADZ,4BACuCZ,IAF9D,WACCG,EADD,QAISC,GAJT,sBAImB,IAAII,MAAM,aAJ7B,uBAKQL,EAASE,OALjB,4G,sHC9BQ,SAASU,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOzB,EAAP,KAAe0B,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA4BC,MAAK,SAACC,GAAD,OAAUJ,EAAUI,EAAKC,cACzD,KAGD,iCACE,0CACA,SAAC,IAAD,CAAS/B,OAAQA","sources":["webpack://goit-react-hw-05-movies/./src/components/ListRen/ListRen.module.css?8a8a","components/ListRen/ListRen.jsx","services/ApiService.jsx","views/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListRen_list__K1tfQ\",\"item\":\"ListRen_item__H8QV5\",\"link\":\"ListRen_link__ncij6\"};","import { Link } from \"react-router-dom\";\nimport s from \"./ListRen.module.css\";\n\nconst ListRen = ({ movies }) => {\n  // const {url} = useRouteMatch()\n  return (\n    <>\n      {movies && (\n        <ul className={s.list}>\n          {movies.map((movie) => (\n            <li key={movie.id} className={s.item}>\n              <Link to={`/movies/${movie.id}`} className={s.link}>\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default ListRen;","const API_KEY = \"a7fbd97c4bcadca0b85e6cd0f372e193\";\n\nexport async function fetchWithError() {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport async function getMoviesSearch(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language-en-US&page=1&query=${query}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}\n\nexport async function fetchCastId(movieId) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}\n\nexport async function fetchReview(movieId) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error(\"Not found\");\n  return await response.json();\n}","import { useState, useEffect } from \"react\";\n// import { Link, useRouteMatch } from \"react-router-dom\";\nimport ListRen from \"../components/ListRen/ListRen\";\nimport * as ApiService from \"../services/ApiService\";\n\nexport default function Homepage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    ApiService.fetchWithError().then((data) => setMovies(data.results));\n  }, []);\n  // console.log(movies);\n  return (\n    <>\n      <h2>Tranding Now</h2>\n      <ListRen movies={movies} />\n    </>\n  );\n}"],"names":["movies","className","s","map","movie","to","id","title","name","API_KEY","fetchWithError","fetch","response","ok","json","Promise","reject","Error","getMoviesSearch","query","fetchMovieId","movieId","fetchCastId","fetchReview","Homepage","useState","setMovies","useEffect","ApiService","then","data","results"],"sourceRoot":""}